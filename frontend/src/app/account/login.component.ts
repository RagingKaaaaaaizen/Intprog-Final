import { Component, OnInit } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';
import { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';
import { first } from 'rxjs/operators';

import { AccountService, AlertService } from '../_services';

@Component({ templateUrl: 'login.component.html' })
export class LoginComponent implements OnInit {
    form: UntypedFormGroup;
    loading = false;
    submitted = false;
    returnUrl: string;

    constructor(
        private formBuilder: UntypedFormBuilder,
        private route: ActivatedRoute,
        private router: Router,
        private accountService: AccountService,
        private alertService: AlertService
    ) { }

    ngOnInit() {
        this.form = this.formBuilder.group({
            email: ['', [Validators.required, Validators.email]],
            password: ['', Validators.required]
        });

        // get return url from route parameters or default to '/'
        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';
    }

    // convenience getter for easy access to form fields
    get f() { return this.form.controls; }

    onSubmit() {
        this.submitted = true;

        // reset alerts on submit
        this.alertService.clear();

        // stop here if form is invalid
        if (this.form.invalid) {
            return;
        }

        this.loading = true;
        this.accountService.login(this.f.email.value, this.f.password.value)
            .pipe(first())
            .subscribe({
                next: () => {
                    // Display info for backend testing with Ethereal
                    this.alertService.info(`
                        <h4>Login Successful</h4>
                        <p>You are now logged in to the application.</p>
                        <p>Note: This application integrates with Ethereal for email testing.</p>
                        <p>Any emails generated by the system will be displayed in the backend console.</p>
                    `, { keepAfterRouteChange: true });
                    
                    this.router.navigate([this.returnUrl]);
                },
                error: error => {
                    console.log('Login error:', error);
                    
                    // Check for specific verification error
                    if (error && error.toLowerCase().includes('not verified')) {
                        // Provide helpful information and verification link
                        this.alertService.emailPreview(`
                            <h4>Email Verification Required</h4>
                            <p>Your account needs email verification before you can log in.</p>
                            <p>We've sent a new verification email to your registered email address.</p>
                            <p>Since we're using Ethereal for testing, please check:</p>
                            <ol>
                                <li>The email preview page where you can see the verification link</li>
                                <li>Or go directly to the <a href="/account/verify-email">verification page</a> and use the token from the email</li>
                            </ol>
                            <div class="mt-3">
                                <a href="/account/verify-email" class="btn btn-primary">Go to Verification Page</a>
                                <a href="/account/register" class="btn btn-outline-secondary ml-2">Register New Account</a>
                            </div>
                        `);
                    } else {
                        this.alertService.error(error);
                    }
                    
                    this.loading = false;
                }
            });
    }
}
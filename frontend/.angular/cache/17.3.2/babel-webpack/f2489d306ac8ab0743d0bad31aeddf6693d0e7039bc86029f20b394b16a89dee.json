{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction VerifyEmailComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"span\", 7);\n    i0.ɵɵelementStart(2, \"p\", 8);\n    i0.ɵɵtext(3, \"Verifying email...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction VerifyEmailComponent_div_6_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Token is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VerifyEmailComponent_div_6_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, VerifyEmailComponent_div_6_div_9_div_1_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.token.errors.required);\n  }\n}\nfunction VerifyEmailComponent_div_6_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 19);\n  }\n}\nfunction VerifyEmailComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 9)(2, \"p\");\n    i0.ɵɵtext(3, \"For testing with Ethereal email, please enter the verification token from the backend console:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"form\", 10);\n    i0.ɵɵlistener(\"ngSubmit\", function VerifyEmailComponent_div_6_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(5, \"div\", 11)(6, \"label\", 12);\n    i0.ɵɵtext(7, \"Verification Token\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 13);\n    i0.ɵɵtemplate(9, VerifyEmailComponent_div_6_div_9_Template, 2, 1, \"div\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 11)(11, \"button\", 15);\n    i0.ɵɵtemplate(12, VerifyEmailComponent_div_6_span_12_Template, 1, 0, \"span\", 16);\n    i0.ɵɵtext(13, \" Verify Email \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"a\", 17);\n    i0.ɵɵtext(15, \"Cancel\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.tokenForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx_r1.submitted && ctx_r1.f.token.errors));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitted && ctx_r1.f.token.errors);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.loading);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loading);\n  }\n}\nfunction VerifyEmailComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 20)(2, \"h4\", 21);\n    i0.ɵɵtext(3, \"Verification Failed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"Email verification failed, please try again or contact support for assistance.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"a\", 22);\n    i0.ɵɵtext(7, \"Return to Login\");\n    i0.ɵɵelementEnd()();\n  }\n}\nvar EmailStatus = /*#__PURE__*/function (EmailStatus) {\n  EmailStatus[EmailStatus[\"Verifying\"] = 0] = \"Verifying\";\n  EmailStatus[EmailStatus[\"NeedsManualToken\"] = 1] = \"NeedsManualToken\";\n  EmailStatus[EmailStatus[\"Failed\"] = 2] = \"Failed\";\n  return EmailStatus;\n}(EmailStatus || {});\nexport let VerifyEmailComponent = /*#__PURE__*/(() => {\n  class VerifyEmailComponent {\n    constructor(formBuilder, route, router, accountService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.EmailStatus = EmailStatus;\n      this.emailStatus = EmailStatus.Verifying;\n      this.loading = false;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.tokenForm = this.formBuilder.group({\n        token: ['', Validators.required]\n      });\n      const token = this.route.snapshot.queryParams['token'];\n      // If no token in URL, show manual input form\n      if (!token) {\n        this.emailStatus = EmailStatus.NeedsManualToken;\n        this.alertService.info(`\n                <h4>Manual Token Verification</h4>\n                <p>Since you're using Ethereal email for testing, please enter the verification token from the backend console.</p>\n            `, {\n          autoClose: false\n        });\n        return;\n      }\n      // remove token from url to prevent http referer leakage\n      this.router.navigate([], {\n        relativeTo: this.route,\n        replaceUrl: true\n      });\n      this.verifyToken(token);\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.tokenForm.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      // stop here if form is invalid\n      if (this.tokenForm.invalid) {\n        return;\n      }\n      this.loading = true;\n      this.verifyToken(this.f.token.value);\n    }\n    verifyToken(token) {\n      this.accountService.verifyEmail(token).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Verification successful, you can now login', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../login'], {\n            relativeTo: this.route\n          });\n        },\n        error: () => {\n          this.emailStatus = EmailStatus.Failed;\n          this.loading = false;\n        }\n      });\n    }\n    static #_ = this.ɵfac = function VerifyEmailComponent_Factory(t) {\n      return new (t || VerifyEmailComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: VerifyEmailComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 8,\n      vars: 3,\n      consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-body\"], [\"class\", \"text-center\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"text-center\"], [1, \"spinner-border\", \"spinner-border-lg\"], [1, \"mt-3\"], [1, \"alert\", \"alert-info\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"token\"], [\"type\", \"text\", \"formControlName\", \"token\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"routerLink\", \"../login\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"], [1, \"alert\", \"alert-danger\"], [1, \"alert-heading\"], [\"routerLink\", \"../login\", 1, \"btn\", \"btn-primary\"]],\n      template: function VerifyEmailComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\", 2);\n          i0.ɵɵtext(3, \"Email Verification\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 3);\n          i0.ɵɵtemplate(5, VerifyEmailComponent_div_5_Template, 4, 0, \"div\", 4)(6, VerifyEmailComponent_div_6_Template, 16, 7, \"div\", 5)(7, VerifyEmailComponent_div_7_Template, 8, 0, \"div\", 5);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.emailStatus === ctx.EmailStatus.Verifying);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.emailStatus === ctx.EmailStatus.NeedsManualToken);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.emailStatus === ctx.EmailStatus.Failed);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n      encapsulation: 2\n    });\n  }\n  return VerifyEmailComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
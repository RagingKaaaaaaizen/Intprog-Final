{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport { first } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_h1_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \"Create Department\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, departmentService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.departmentService = departmentService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params(['id']);\n      this.isAddMode = !this.id;\n      this.form = this.formBuilder.group({\n        name: ['', Validators.required],\n        description: ['', Validators.required]\n      });\n    }\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.alertService.clear();\n      if (this.form.invalid) return;\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createDepartment();\n      }\n    }\n    createDepartment() {\n      this.departmentService.create(this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Department created succesfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../', {\n            relativeTo: this.route\n          }]);\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    static #_ = this.ɵfac = function AddEditComponent_Factory(t) {\n      return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.DepartmentService), i0.ɵɵdirectiveInject(i3.AlertService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddEditComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 2,\n      vars: 1,\n      consts: [[4, \"ngIf\"]],\n      template: function AddEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, AddEditComponent_h1_0_Template, 2, 0, \"h1\", 0);\n          i0.ɵɵelement(1, \"form\");\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.isAddMode);\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup],\n      encapsulation: 2\n    });\n  }\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
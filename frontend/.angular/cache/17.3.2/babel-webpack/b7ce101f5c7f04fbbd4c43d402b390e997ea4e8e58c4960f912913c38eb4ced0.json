{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/_services/workflow.service\";\nimport * as i2 from \"@app/_services/employee.service\";\nimport * as i3 from \"@app/_services/alert.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nconst _c0 = () => [\"add\"];\nconst _c1 = a0 => ({\n  employeeId: a0\n});\nconst _c2 = (a0, a1, a2) => ({\n  \"badge bg-warning\": a0,\n  \"badge bg-success\": a1,\n  \"badge bg-danger\": a2\n});\nconst _c3 = a0 => [\"edit\", a0];\nfunction ListComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" Workflows for \", ctx_r0.employee.employeeId, \" - \", ctx_r0.employee.account == null ? null : ctx_r0.employee.account.email, \" \");\n  }\n}\nfunction ListComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" All Workflows \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ListComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 16);\n    i0.ɵɵtext(2, \"No workflows found\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ListComponent_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"span\", 17);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\")(9, \"button\", 18);\n    i0.ɵɵelement(10, \"i\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function ListComponent_tr_26_Template_button_click_11_listener() {\n      const workflow_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.deleteWorkflow(workflow_r3.id));\n    });\n    i0.ɵɵelement(12, \"i\", 21);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const workflow_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(workflow_r3.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(workflow_r3.details);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(6, _c2, workflow_r3.status === \"Pending\", workflow_r3.status === \"Approved\", workflow_r3.status === \"Rejected\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", workflow_r3.status, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(10, _c3, workflow_r3.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isDeleting);\n  }\n}\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    constructor(workflowService, employeeService, alertService, route) {\n      this.workflowService = workflowService;\n      this.employeeService = employeeService;\n      this.alertService = alertService;\n      this.route = route;\n      this.workflows = [];\n      this.isDeleting = false;\n    }\n    ngOnInit() {\n      this.route.queryParams.subscribe(params => {\n        this.employeeId = params['employeeId'];\n        if (this.employeeId) {\n          this.loadEmployeeWorkflows();\n          this.loadEmployeeDetails();\n        } else {\n          this.loadAllWorkflows();\n        }\n      });\n    }\n    loadEmployeeWorkflows() {\n      this.workflowService.getByEmployeeId(this.employeeId).subscribe({\n        next: workflows => {\n          this.workflows = workflows;\n        },\n        error: error => {\n          this.alertService.error('Error loading workflows');\n          console.error('Error loading workflows:', error);\n        }\n      });\n    }\n    loadAllWorkflows() {\n      this.workflowService.getAll().subscribe({\n        next: workflows => {\n          this.workflows = workflows;\n        },\n        error: error => {\n          this.alertService.error('Error loading workflows');\n          console.error('Error loading workflows:', error);\n        }\n      });\n    }\n    loadEmployeeDetails() {\n      this.employeeService.getById(this.employeeId).subscribe({\n        next: employee => {\n          this.employee = employee;\n        },\n        error: error => {\n          this.alertService.error('Error loading employee details');\n          console.error('Error loading employee details:', error);\n        }\n      });\n    }\n    deleteWorkflow(id) {\n      if (confirm('Are you sure you want to delete this workflow?')) {\n        this.isDeleting = true;\n        this.workflowService.delete(id).subscribe({\n          next: () => {\n            this.workflows = this.workflows.filter(x => x.id !== id);\n            this.alertService.success('Workflow deleted successfully');\n          },\n          error: error => {\n            this.alertService.error('Error deleting workflow');\n            console.error('Error deleting workflow:', error);\n          },\n          complete: () => {\n            this.isDeleting = false;\n          }\n        });\n      }\n    }\n    static #_ = this.ɵfac = function ListComponent_Factory(t) {\n      return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.WorkflowService), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.AlertService), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ListComponent,\n      selectors: [[\"app-workflow-list\"]],\n      decls: 27,\n      vars: 9,\n      consts: [[1, \"card\"], [1, \"card-header\"], [1, \"row\"], [1, \"col\"], [4, \"ngIf\"], [1, \"col\", \"text-end\"], [1, \"btn\", \"btn-primary\", 3, \"routerLink\", \"queryParams\"], [1, \"fas\", \"fa-plus\"], [1, \"card-body\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\"], [2, \"width\", \"20%\"], [2, \"width\", \"40%\"], [2, \"width\", \"15%\"], [2, \"width\", \"25%\"], [4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"4\", 1, \"text-center\"], [3, \"ngClass\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", \"me-1\", 3, \"routerLink\"], [1, \"fas\", \"fa-pencil-alt\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\", \"disabled\"], [1, \"fas\", \"fa-trash\"]],\n      template: function ListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h4\");\n          i0.ɵɵtemplate(5, ListComponent_ng_container_5_Template, 2, 2, \"ng-container\", 4)(6, ListComponent_ng_container_6_Template, 2, 0, \"ng-container\", 4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"a\", 6);\n          i0.ɵɵelement(9, \"i\", 7);\n          i0.ɵɵtext(10, \" New Workflow \");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(11, \"div\", 8)(12, \"div\", 9)(13, \"table\", 10)(14, \"thead\")(15, \"tr\")(16, \"th\", 11);\n          i0.ɵɵtext(17, \"Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"th\", 12);\n          i0.ɵɵtext(19, \"Details\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"th\", 13);\n          i0.ɵɵtext(21, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"th\", 14);\n          i0.ɵɵtext(23, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(24, \"tbody\");\n          i0.ɵɵtemplate(25, ListComponent_tr_25_Template, 3, 0, \"tr\", 4)(26, ListComponent_tr_26_Template, 13, 12, \"tr\", 15);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.employee);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.employee);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0))(\"queryParams\", i0.ɵɵpureFunction1(7, _c1, ctx.employeeId));\n          i0.ɵɵadvance(17);\n          i0.ɵɵproperty(\"ngIf\", ctx.workflows.length === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.workflows);\n        }\n      },\n      dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i4.RouterLink],\n      encapsulation: 2\n    });\n  }\n  return ListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
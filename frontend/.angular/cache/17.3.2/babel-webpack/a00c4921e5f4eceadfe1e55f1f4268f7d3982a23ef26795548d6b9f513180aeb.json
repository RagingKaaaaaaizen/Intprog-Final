{"ast":null,"code":"import { first } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/_services/request.service\";\nimport * as i2 from \"@app/_services/alert.service\";\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    constructor(requestService, alertService) {\n      this.requestService = requestService;\n      this.alertService = alertService;\n      this.requests = [];\n      this.loading = false;\n      this.isDeleting = false;\n    }\n    ngOnInit() {\n      this.loadRequests();\n    }\n    loadRequests() {\n      this.loading = true;\n      this.requestService.getAll().pipe(first()).subscribe({\n        next: requests => {\n          this.requests = requests;\n          this.loading = false;\n        },\n        error: error => {\n          this.alertService.error('Error loading requests');\n          this.loading = false;\n        }\n      });\n    }\n    deleteRequest(id) {\n      if (!confirm('Are you sure you want to delete this request?')) return;\n      this.isDeleting = true;\n      this.requestService.delete(id).pipe(first()).subscribe({\n        next: () => {\n          this.requests = this.requests.filter(x => x.id !== id);\n          this.alertService.success('Request deleted successfully');\n          this.isDeleting = false;\n        },\n        error: error => {\n          this.alertService.error('Error deleting request');\n          this.isDeleting = false;\n        }\n      });\n    }\n    static #_ = this.ɵfac = function ListComponent_Factory(t) {\n      return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.RequestService), i0.ɵɵdirectiveInject(i2.AlertService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ListComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 1,\n      vars: 0,\n      template: function ListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"h1\");\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return ListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
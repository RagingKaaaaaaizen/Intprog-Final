{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../_services/request.service\";\nimport * as i4 from \"../../_services/alert.service\";\nimport * as i5 from \"../../_services/employee.service\";\nimport * as i6 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction AddEditComponent_h1_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \"Create Request\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_h1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \"Edit Request\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(type_r1);\n  }\n}\nfunction AddEditComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Request type is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, AddEditComponent_div_8_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.type.errors.required);\n  }\n}\nfunction AddEditComponent_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", employee_r3.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate3(\" \", employee_r3.employeeId, \" - \", (employee_r3.account == null ? null : employee_r3.account.firstName) || \"\", \" \", (employee_r3.account == null ? null : employee_r3.account.lastName) || \"\", \" \");\n  }\n}\nfunction AddEditComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Employee is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, AddEditComponent_div_16_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.employeeId.errors.required);\n  }\n}\nfunction AddEditComponent_div_24_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Item name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_24_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, AddEditComponent_div_24_div_6_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", item_r5.get(\"name\").errors.required);\n  }\n}\nfunction AddEditComponent_div_24_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Quantity is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_24_div_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Quantity must be at least 1\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_24_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, AddEditComponent_div_24_div_11_div_1_Template, 2, 0, \"div\", 0)(2, AddEditComponent_div_24_div_11_div_2_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", item_r5.get(\"quantity\").errors.required);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", item_r5.get(\"quantity\").errors.min);\n  }\n}\nfunction AddEditComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 21)(2, \"div\", 22)(3, \"label\");\n    i0.ɵɵtext(4, \"Item Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 23);\n    i0.ɵɵtemplate(6, AddEditComponent_div_24_div_6_Template, 2, 1, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 24)(8, \"label\");\n    i0.ɵɵtext(9, \"Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 25);\n    i0.ɵɵtemplate(11, AddEditComponent_div_24_div_11_Template, 3, 2, \"div\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 24)(13, \"label\");\n    i0.ɵɵtext(14, \"Notes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 27)(17, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_24_Template_button_click_17_listener() {\n      const i_r6 = i0.ɵɵrestoreView(_r4).index;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.removeItem(i_r6));\n    });\n    i0.ɵɵelement(18, \"i\", 29);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formGroupName\", i_r6);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx_r1.submitted && item_r5.get(\"name\").errors));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitted && item_r5.get(\"name\").errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx_r1.submitted && item_r5.get(\"quantity\").errors));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitted && item_r5.get(\"quantity\").errors);\n  }\n}\nfunction AddEditComponent_span_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 30);\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, requestService, alertService, employeeService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.requestService = requestService;\n      this.alertService = alertService;\n      this.employeeService = employeeService;\n      this.loading = false;\n      this.submitted = false;\n      this.employees = [];\n      this.requestTypes = ['Equipment Request', 'Leave Request', 'Training Request', 'Expense Claim', 'Other'];\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      // Get the employee ID from query params if it's in add mode\n      let selectedEmployeeId = this.route.snapshot.queryParams['employeeId'];\n      // Load employees for dropdown\n      this.loadEmployees(selectedEmployeeId);\n      // Initialize the form\n      this.form = this.formBuilder.group({\n        type: ['Equipment Request', Validators.required],\n        employeeId: [selectedEmployeeId || '', Validators.required],\n        notes: [''],\n        status: ['Pending'],\n        items: this.formBuilder.array([this.createItem()])\n      });\n      if (!this.isAddMode) {\n        this.requestService.getById(this.id).pipe(first()).subscribe({\n          next: request => {\n            // Clear the items array\n            this.itemsArray.clear();\n            // Add items from the request\n            if (request.items && request.items.length > 0) {\n              request.items.forEach(item => {\n                this.itemsArray.push(this.formBuilder.group({\n                  id: [item.id],\n                  name: [item.name, Validators.required],\n                  quantity: [item.quantity, [Validators.required, Validators.min(1)]],\n                  notes: [item.notes || ''],\n                  status: [item.status || 'Pending']\n                }));\n              });\n            } else {\n              // Add a default item if none exists\n              this.itemsArray.push(this.createItem());\n            }\n            // Update the rest of the form\n            this.form.patchValue({\n              type: request.type,\n              employeeId: request.employeeId,\n              notes: request.notes,\n              status: request.status\n            });\n          },\n          error: error => {\n            this.alertService.error('Error loading request details');\n            this.loading = false;\n          }\n        });\n      }\n    }\n    // Convenience getter for form fields\n    get f() {\n      return this.form.controls;\n    }\n    // Getter for the items form array\n    get itemsArray() {\n      return this.form.get('items');\n    }\n    // Method to create a new item FormGroup\n    createItem() {\n      return this.formBuilder.group({\n        name: ['', Validators.required],\n        quantity: [1, [Validators.required, Validators.min(1)]],\n        notes: ['']\n      });\n    }\n    // Method to add a new item\n    addItem() {\n      this.itemsArray.push(this.createItem());\n    }\n    // Method to remove an item\n    removeItem(index) {\n      if (this.itemsArray.length > 1) {\n        this.itemsArray.removeAt(index);\n      } else {\n        this.alertService.error('At least one item is required');\n      }\n    }\n    // Load employees for the dropdown\n    loadEmployees(selectedEmployeeId) {\n      this.employeeService.getAll().pipe(first()).subscribe(employees => {\n        this.employees = employees;\n        // If we have a selected employee ID, make sure the form is updated\n        if (selectedEmployeeId && this.form) {\n          this.form.patchValue({\n            employeeId: selectedEmployeeId\n          });\n        }\n      });\n    }\n    onSubmit() {\n      this.submitted = true;\n      // Reset alerts on submit\n      this.alertService.clear();\n      // Stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createRequest();\n      } else {\n        this.updateRequest();\n      }\n    }\n    createRequest() {\n      this.requestService.create(this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Request created successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    updateRequest() {\n      this.requestService.update(this.id, this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Request updated successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    static #_ = this.ɵfac = function AddEditComponent_Factory(t) {\n      return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RequestService), i0.ɵɵdirectiveInject(i4.AlertService), i0.ɵɵdirectiveInject(i5.EmployeeService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddEditComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 35,\n      vars: 16,\n      consts: [[4, \"ngIf\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"formControlName\", \"type\", 1, \"form-control\", 3, \"ngClass\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"formControlName\", \"employeeId\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"\"], [\"formControlName\", \"notes\", \"rows\", \"3\", 1, \"form-control\"], [1, \"mt-4\"], [\"formArrayName\", \"items\"], [\"class\", \"card mb-3 p-3\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"fas\", \"fa-plus\", \"mr-1\"], [1, \"form-group\", \"mt-4\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"routerLink\", \"/admin/requests\", 1, \"btn\", \"btn-link\"], [3, \"value\"], [1, \"invalid-feedback\"], [1, \"card\", \"mb-3\", \"p-3\"], [1, \"row\", 3, \"formGroupName\"], [1, \"col-md-5\", \"form-group\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [1, \"col-md-3\", \"form-group\"], [\"type\", \"number\", \"formControlName\", \"quantity\", \"min\", \"1\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"notes\", 1, \"form-control\"], [1, \"col-md-1\", \"d-flex\", \"align-items-end\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"fas\", \"fa-times\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n      template: function AddEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, AddEditComponent_h1_0_Template, 2, 0, \"h1\", 0)(1, AddEditComponent_h1_1_Template, 2, 0, \"h1\", 0);\n          i0.ɵɵelementStart(2, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"label\");\n          i0.ɵɵtext(5, \"Request Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"select\", 3);\n          i0.ɵɵtemplate(7, AddEditComponent_option_7_Template, 2, 2, \"option\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(8, AddEditComponent_div_8_Template, 2, 1, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\");\n          i0.ɵɵtext(11, \"Employee\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"select\", 6)(13, \"option\", 7);\n          i0.ɵɵtext(14, \"Select Employee\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(15, AddEditComponent_option_15_Template, 2, 4, \"option\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(16, AddEditComponent_div_16_Template, 2, 1, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\", 2)(18, \"label\");\n          i0.ɵɵtext(19, \"Notes\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"textarea\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"h3\", 9);\n          i0.ɵɵtext(22, \"Request Items\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"div\", 10);\n          i0.ɵɵtemplate(24, AddEditComponent_div_24_Template, 19, 9, \"div\", 11);\n          i0.ɵɵelementStart(25, \"div\", 2)(26, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_26_listener() {\n            return ctx.addItem();\n          });\n          i0.ɵɵelement(27, \"i\", 13);\n          i0.ɵɵtext(28, \" Add Item \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(29, \"div\", 14)(30, \"button\", 15);\n          i0.ɵɵtemplate(31, AddEditComponent_span_31_Template, 1, 0, \"span\", 16);\n          i0.ɵɵtext(32, \" Save \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"a\", 17);\n          i0.ɵɵtext(34, \"Cancel\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.isAddMode);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isAddMode);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx.submitted && ctx.f.type.errors));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.requestTypes);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.type.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, ctx.submitted && ctx.f.employeeId.errors));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.employeeId.errors);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngForOf\", ctx.itemsArray.controls);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [i6.NgClass, i6.NgForOf, i6.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i2.RouterLink],\n      encapsulation: 2\n    });\n  }\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
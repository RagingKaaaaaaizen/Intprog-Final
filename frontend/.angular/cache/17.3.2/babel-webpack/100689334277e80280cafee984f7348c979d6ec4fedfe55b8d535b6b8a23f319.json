{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/_services\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction AddEditComponent_h1_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \"Create Employee\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_h1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \"Edit Employee\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"User is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, AddEditComponent_div_11_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.userId.required);\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(employeeService, formBuilder, router, route, alertService) {\n      this.employeeService = employeeService;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.route = route;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      this.form = this.formBuilder.group({\n        userId: ['', Validators.required],\n        position: ['', Validators.required],\n        departmentId: ['', Validators.required]\n      });\n    }\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.alertService.clear();\n      if (this.form.invalid) return;\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createAccount();\n      }\n    }\n    createAccount() {\n      this.employeeService.create(this.form.value);\n    }\n    static #_ = this.ɵfac = function AddEditComponent_Factory(t) {\n      return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.UntypedFormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i1.AlertService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddEditComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 12,\n      vars: 7,\n      consts: [[4, \"ngIf\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-row\"], [1, \"form-group\", \"col\"], [\"formControlName\", \"userId\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"invalid-feedback\"]],\n      template: function AddEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, AddEditComponent_h1_0_Template, 2, 0, \"h1\", 0)(1, AddEditComponent_h1_1_Template, 2, 0, \"h1\", 0);\n          i0.ɵɵelementStart(2, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"label\");\n          i0.ɵɵtext(6, \"User\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"select\", 4);\n          i0.ɵɵelement(8, \"option\", 5);\n          i0.ɵɵelementStart(9, \"option\", 5);\n          i0.ɵɵtext(10, \"w\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(11, AddEditComponent_div_11_Template, 2, 1, \"div\", 6);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.isAddMode);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isAddMode);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.submitted && ctx.f.userId.errors));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.userId.errors);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n      encapsulation: 2\n    });\n  }\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}